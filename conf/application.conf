play.http.secret.key = "play.http.secret.key"
play.http.secret.key = ${?APPLICATION_SECRET}

play {
  filters {
    enabled += play.filters.cors.CORSFilter
    cors {
      allowedOrigins = null
      allowedHttpMethods = null
      allowedHttpHeaders = null
    }
    hosts {
      allowed = ["."]
    }
  }
}

# max(parallelism-min, min(parallelism-max, cores * parallelism-factor)
analysis-context {
  fork-join-executor {
    parallelism-min = 2
    parallelism-factor = 3.0
    parallelism-max = 10
  }
}

database-context {
  fork-join-executor {
    parallelism-min = 2
    parallelism-factor = 3.0
    parallelism-max = 10
  }
}

# db-read-context {
#   executor = "thread-pool-executor"
#   throughput = 1
#   thread-pool-executor {
#     fixed-pool-size = 20
#   }
# }

# db-write-context {
#   executor = "thread-pool-executor"
#   throughput = 1
#   thread-pool-executor {
#     fixed-pool-size = 10
#   }
# }

# Consider this for heavy database work in the future
# akka {
#   actor {
#     default-dispatcher {
#       executor = "thread-pool-executor"
#       throughput = 1
#       thread-pool-executor {
#         fixed-pool-size = ??? # database thread pools + cores
#       }
#     }
#   }
# }

aws {
  credentials {
    access-key = "your aws access key"
    access-key = ${?AWS_ACCESS_KEY}
    secret-key = "your aws secret key"
    secret-key = ${?AWS_SECRET_KEY}
  }
}

temp-file-path="conf"
temp-file-path=${?TEMP_FILE_PATH}

db {
  default {
    driver="org.postgresql.Driver"
    url="jdbc:postgresql://localhost:8686/postgres"
    username="postgres"
    password="postgres"
  }
}
